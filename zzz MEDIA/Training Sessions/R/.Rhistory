knitr::opts_chunk$set(echo = TRUE, comment = NA, message = FALSE,
fig.width = 5, fig.height = 4, fig.align = "center")
tinytex::install_tinytex(force=TRUE)
install.packages("mosaic")
install.packages("oilabs")
install.packages("tidyverse", dependencies=TRUE)
library(tidyverse)
head(mpg)
str(mpg)
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
# Left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
# Right
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
ggplot(data = mpg)+
geom_point(mapping = aes(x = displ, y = hwy),color = "blue") +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid (drv ~ cyl)
# left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
# right
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv, color = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv))+
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv, color = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv)
)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
head(diamonds)
str(diamonds)
?diamonds
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
stat_count(mapping = aes(x = cut))
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_bar(mapping = aes(x = cut, y = freq), stat = "identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds, mapping = aes(x = cut, colour = clarity)) +
geom_bar(fill = NA, position = "identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data=mpg)+
geom_point(mapping=aes(x = displ, y = hwy),position="jitter")
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
knitr::opts_chunk$set(echo = FALSE)
df <- read.csv(file = "HW3conjointdata.csv",header=TRUE)
reg_s1 <- lm(Ratings ~ price + PPM..25 + PPM..30 + Wireless + Epson + Canon, data = df[df$segment == 1,] )
summary(reg_s1)
reg_s2 <- lm(Ratings ~ price + PPM..25 + PPM..30 + Wireless + Epson + Canon, data = df[df$segment == 2,] )
summary(reg_s2)
reg_s3 <- lm(Ratings ~ price + PPM..25 + PPM..30 + Wireless + Epson + Canon, data = df[df$segment == 3,] )
summary(reg_s3)
vals_s1<- -coefficients(reg_s1)/coefficients(reg_s1)[names(coefficients(reg_s1)) == 'price']
vals_s2<- -coefficients(reg_s2)/coefficients(reg_s2)[names(coefficients(reg_s2)) == 'price']
vals_s3<- -coefficients(reg_s3)/coefficients(reg_s3)[names(coefficients(reg_s3)) == 'price']
vals_s1
vals_s2
vals_s3
# To plot the demand curve
##########################
# Calculate evc for each segment - NOTE THAT YOU NEED TO CALCULATE AND INSERT A REFERENCE VALUE in the CODE BELOW
# vals_s1[6] takes the 6th entry of the vals_s1 vector, which corresponds to the WTP for the Epson brand name
evc1<- INSERT REFERENCE VALUE HERE + vals_s1[6]
knitr::opts_chunk$set(echo = FALSE)
df <- read.csv(file = "HW3conjointdata.csv",header=TRUE)
reg_s1 <- lm(Ratings ~ price + PPM..25 + PPM..30 + Wireless + Epson + Canon, data = df[df$segment == 1,] )
summary(reg_s1)
reg_s2 <- lm(Ratings ~ price + PPM..25 + PPM..30 + Wireless + Epson + Canon, data = df[df$segment == 2,] )
summary(reg_s2)
reg_s3 <- lm(Ratings ~ price + PPM..25 + PPM..30 + Wireless + Epson + Canon, data = df[df$segment == 3,] )
summary(reg_s3)
vals_s1<- -coefficients(reg_s1)/coefficients(reg_s1)[names(coefficients(reg_s1)) == 'price']
vals_s2<- -coefficients(reg_s2)/coefficients(reg_s2)[names(coefficients(reg_s2)) == 'price']
vals_s3<- -coefficients(reg_s3)/coefficients(reg_s3)[names(coefficients(reg_s3)) == 'price']
vals_s1
vals_s2
vals_s3
# To plot the demand curve
##########################
# Calculate evc for each segment - NOTE THAT YOU NEED TO CALCULATE AND INSERT A REFERENCE VALUE in the CODE BELOW
# vals_s1[6] takes the 6th entry of the vals_s1 vector, which corresponds to the WTP for the Epson brand name
evc1<- INSERT REFERENCE VALUE HERE + vals_s1[6]
df
vals_s1
knitr::opts_chunk$set(echo = FALSE)
df <- read.csv(file = "HW3conjointdata.csv",header=TRUE)
reg_s1 <- lm(Ratings ~ price + PPM..25 + PPM..30 + Wireless + Epson + Canon, data = df[df$segment == 1,] )
summary(reg_s1)
reg_s2 <- lm(Ratings ~ price + PPM..25 + PPM..30 + Wireless + Epson + Canon, data = df[df$segment == 2,] )
summary(reg_s2)
reg_s3 <- lm(Ratings ~ price + PPM..25 + PPM..30 + Wireless + Epson + Canon, data = df[df$segment == 3,] )
summary(reg_s3)
vals_s1<- -coefficients(reg_s1)/coefficients(reg_s1)[names(coefficients(reg_s1)) == 'price']
vals_s2<- -coefficients(reg_s2)/coefficients(reg_s2)[names(coefficients(reg_s2)) == 'price']
vals_s3<- -coefficients(reg_s3)/coefficients(reg_s3)[names(coefficients(reg_s3)) == 'price']
vals_s1
vals_s2
vals_s3
# To plot the demand curve
##########################
# Calculate evc for each segment - NOTE THAT YOU NEED TO CALCULATE AND INSERT A REFERENCE VALUE in the CODE BELOW
# vals_s1[6] takes the 6th entry of the vals_s1 vector, which corresponds to the WTP for the Epson brand name
evc1<- vals_s1[1] - 99 + vals_s1[6]
evc2<- vals_s1[2] - 99 + vals_s2[6]
evc3<- vals_s1[3] - 99 + vals_s3[6]
# Count the total number of subjects
n <- sum(df$segment==1)+sum(df$segment==2)+sum(df$segment==3)
# Count the size of each segment and divide by the total number of subjects - this gives us market shares
n1 <-sum(df$segment==1)/n
n2 <-sum(df$segment==2)/n
n3 <-sum(df$segment==3)/n
# Store evc and segment sizes in a matrix
evc3a = matrix( c(0, evc3,
n3, evc3,
n3, evc2,
n2+n3, evc2,
n2+n3, evc1,
n1+n2+n3,evc1,
n1+n2+n3,0 ),
ncol = 2, byrow=T)
# Create a vector x that contains shares
# and a vector y that contains prices
x<-evc3a[,1]
y<-evc3a[,2]
# Plot the data
matplot(x,y,type = "l",ylab = "Price", xlab = "Market share(fraction)", )
evc1
evc2
evc3
knitr::opts_chunk$set(echo = FALSE)
df <- read.csv(file = "HW3conjointdata.csv",header=TRUE)
reg_s1 <- lm(Ratings ~ price + PPM..25 + PPM..30 + Wireless + Epson + Canon, data = df[df$segment == 1,] )
summary(reg_s1)
reg_s2 <- lm(Ratings ~ price + PPM..25 + PPM..30 + Wireless + Epson + Canon, data = df[df$segment == 2,] )
summary(reg_s2)
reg_s3 <- lm(Ratings ~ price + PPM..25 + PPM..30 + Wireless + Epson + Canon, data = df[df$segment == 3,] )
summary(reg_s3)
vals_s1<- -coefficients(reg_s1)/coefficients(reg_s1)[names(coefficients(reg_s1)) == 'price']
vals_s2<- -coefficients(reg_s2)/coefficients(reg_s2)[names(coefficients(reg_s2)) == 'price']
vals_s3<- -coefficients(reg_s3)/coefficients(reg_s3)[names(coefficients(reg_s3)) == 'price']
vals_s1
vals_s2
vals_s3
# To plot the demand curve
##########################
# Calculate evc for each segment - NOTE THAT YOU NEED TO CALCULATE AND INSERT A REFERENCE VALUE in the CODE BELOW
# vals_s1[6] takes the 6th entry of the vals_s1 vector, which corresponds to the WTP for the Epson brand name
evc1<- vals_s1[1] - 99 + vals_s1[6]
evc2<- vals_s2[1] - 99 + vals_s2[6]
evc3<- vals_s3[1] - 99 + vals_s3[6]
# Count the total number of subjects
n <- sum(df$segment==1)+sum(df$segment==2)+sum(df$segment==3)
# Count the size of each segment and divide by the total number of subjects - this gives us market shares
n1 <-sum(df$segment==1)/n
n2 <-sum(df$segment==2)/n
n3 <-sum(df$segment==3)/n
# Store evc and segment sizes in a matrix
evc3a = matrix( c(0, evc3,
n3, evc3,
n3, evc2,
n2+n3, evc2,
n2+n3, evc1,
n1+n2+n3,evc1,
n1+n2+n3,0 ),
ncol = 2, byrow=T)
# Create a vector x that contains shares
# and a vector y that contains prices
x<-evc3a[,1]
y<-evc3a[,2]
# Plot the data
matplot(x,y,type = "l",ylab = "Price", xlab = "Market share(fraction)", )
evc1
evc2
evc3
